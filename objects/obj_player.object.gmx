<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_white</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///// PLAYER CREATE EVENT   

            other_pong=instance_nearest(x,y,object_index)
/////

/////INITIALISATION  DU TABLEAU DE PARAM INI
t=0
max_array=10 /// 10 VALEURS MAX...

//scr_array_populate(ini_param,max_array) : 


var i;             /////TOUTES REGLEES A -1 DE BASE
 i = max_array-1;  
 repeat(max_array) ////EN PARTANT DU MAX-1 JUSQUE 0 LE DERNIER :
    {
    ini_param[i] =-1; /// LE PARAM NÂ°i EST REGLE A -1
    ini_param_name[i]="noname" ///SON NOM  EST "NO NAME" POUR LE MOMENT TANT QUE RIEN NY A  ETE DECLARE
    i -= 1;////ON ENLEVE 1 ET ON RECOMMENCE...
    }
direction=90    
 started=true
 yshrink=0.01
 gp_button=0
scr_player_ini_param() /////ON FAIT CORRESPONDRE LES VALEURS AVEC LES CONSTANTES SPECIFIQUE A CHACUNS.
  
 











</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///START!
    
if keyboard_check_pressed(vk_space)
xor gamepad_button_check_pressed (0,gp_face1)  
xor gamepad_button_check_pressed (0,gp_face2)  
xor gamepad_button_check_pressed (0,gp_face3)  
xor gamepad_button_check_pressed (0,gp_face4)   //// IF SPACE PRESSED, BALL IS LAUNCHED
        {
        sound_random_pitch(laser2)        //SON!
            if started=false started=true            //// GAME HAS STARTED
            
            other_pong=instance_nearest(x,y,object_index)
            with instance_create(x,y,obj_inverter)
            {
            move_towards_point(room_width/2,room_height/2,20)
            image_colour=other.image_colour
            }
            
        } 

        
///
                    


if !blinking  
{      //HURT WHEN BLINKING : CANT PLAY IT;ELSE :
scr_player_moves()  //PLAYER MOVES
}
else

{ 
if blinking        //HURT WHEN BLINKING : CANT PLAY IT :
    if abs(step_start-global.step)&gt;3*room_speed/// START STEP == AT BLINK START 3*ROOMSPEED = 3SECONDS
        blinking=false ////STOP BLINKING
}

///testing
ball_shrink()
if global.debug////WITH DEBUGGING TURNED  ON (F1)

    {
        if keyboard_check(vk_add)
                yshrink+=0.01
        if keyboard_check(vk_subtract)
                yshrink-=0.01
    }
    
    //PARAM CHECK AND CHANGES
   scr_cam_read_param()

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=(1-abs(vspeed*yshrink))
image_yscale=5+5*abs(vspeed*yshrink)

//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//scr_cam_draw_blink_white()



if !blinking
{

    draw_sprite_ext(sprite_index,image_index,x,y,image_xscale*(1+yshrink)/**(1-abs(vspeed*yshrink))*/,image_yscale/**(1+abs(vspeed*yshrink))*/,image_angle,image_colour ,image_alpha)
    
scr_backtrack()///take 60 x y position points back in time.

scr_glow()
eye_draw()////draw eyes looking at ball(nasty eyes)
    if blink=1

    {
        shader_set(shader_shot);
        draw_sprite_ext(sprite_index,image_index,x,y,image_xscale*(1+yshrink),image_yscale/**(1+abs(vspeed*yshrink))*/,image_angle,c_white ,image_alpha)
        shader_reset();
        blink=0
    }
}
        
else
        
if blinking
        {
            scr_cam_draw_blink_white()
        }
        
        
        
        
        
        
        
        
        
        
        
if global.debug==true

{
    draw_text(x,y,string(played))
    draw_text(x,y,string(acc))

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
